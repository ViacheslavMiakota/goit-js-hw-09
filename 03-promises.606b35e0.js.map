{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,UAAWC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAXPQ,QAAQC,IAAIf,EAAKC,WAcjBD,EAAKC,UAAUe,iBAAiB,UAAU,SAAAC,GACxCA,EAAMC,iBAKN,IAHA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OACzCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OACtCG,EAAI,EAAGA,EAAID,EAAQC,IAC1BrB,EAAcqB,EAAI,EAAGN,GAClBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,MAAK,CAC9DD,SAAQ,gBACV0B,aAAa,EACbC,cAAc,G,IAGjBC,OAAM,SAAAN,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBR,EAAA8B,OAAOM,QAAQ,sBAAqCJ,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,MAAK,CAC7DD,SAAU,gBACV0B,aAAa,EACbC,cAAc,G,IAGpBb,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  submitBtn: document.querySelector('form'),\n};\nconsole.log(refs.submitBtn);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nrefs.submitBtn.addEventListener('submit', event => {\n  event.preventDefault();\n  // const { delay, step, amount } = event.currentTarget.elements;\n  let delay = Number(event.currentTarget.delay.value);\n  let step = Number(event.currentTarget.step.value);\n  let amount = Number(event.currentTarget.amount.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      });\n    delay += step;\n  }\n});\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","submitBtn","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","param","Notify","success","concat","backOverlay","clickToClose","catch","failure"],"version":3,"file":"03-promises.606b35e0.js.map"}