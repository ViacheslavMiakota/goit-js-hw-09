{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,SAAUF,SAASC,cAAc,sBACjCE,WAAYH,SAASC,cAAc,wBACnCG,UAAWJ,SAASC,cAAc,SAOpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,IAGvBT,EAAKC,S,IAfTgB,QAAQC,IAAIlB,EAAKC,WACjBgB,QAAQC,IAAIlB,EAAKI,UACjBa,QAAQC,IAAIlB,EAAKK,YACjBY,QAAQC,IAAIlB,EAAKM,WAejBN,EAAKM,UAAUa,iBAAiB,UAAU,WAExC,IADA,IAAIC,EAAc,EACTC,EAAI,EAAGA,EAAIrB,EAAKK,WAAWiB,MAAOD,GAAK,EAAG,CACjDD,GAAe,EACfH,QAAQC,IAAIE,GAGZb,EAAca,EAFKpB,EAAKC,UAAUqB,MAAQtB,EAAKI,SAASkB,OAGrDC,MAAK,SAAAC,GAAWA,EAARhB,SAAegB,EAALf,MACjBX,EAAA2B,OAAOC,QAAQ,gDAAmD,CAC9DlB,SAAQ,gBACVmB,aAAa,EACbC,cAAc,G,IAGjBC,OAAM,SAAAL,GAAWA,EAARhB,SAAegB,EAALf,MAClBX,EAAA2B,OAAOK,QAAQ,+CAAgD,CAC7DtB,SAAU,gBACVmB,aAAa,EACbC,cAAc,G,IAItBG,MAAMC,gB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delayName: document.querySelector(\"input[name='delay']\"),\n  stepName: document.querySelector(\"input[name='step']\"),\n  amountName: document.querySelector(\"input[name='amount']\"),\n  submitBtn: document.querySelector('form'),\n};\nconsole.log(refs.delayName);\nconsole.log(refs.stepName);\nconsole.log(refs.amountName);\nconsole.log(refs.submitBtn);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n    refs.delayName;\n  });\n}\nrefs.submitBtn.addEventListener('submit', () => {\n  let numPosition = 0;\n  for (let i = 0; i < refs.amountName.value; i += 1) {\n    numPosition += 1;\n    console.log(numPosition);\n    const dalayTotal = refs.delayName.value + refs.stepName.value;\n\n    createPromise(numPosition, dalayTotal)\n      .then(({ position, delay }) => {\n        Notify.success('✅ Fulfilled promise ${position} in ${delay}ms', {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure('❌ Rejected promise ${position} in ${delay}ms', {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      });\n  }\n  event.preventDefault();\n});\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delayName","document","querySelector","stepName","amountName","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","numPosition","i","value","then","param","Notify","success","backOverlay","clickToClose","catch","failure","event","preventDefault"],"version":3,"file":"03-promises.8c8c9f26.js.map"}