{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbQ,QAAQC,IAAIf,EAAKC,WAejBD,EAAKC,UAAUe,iBAAiB,UAAUC,IACxCA,EAAMC,iBACN,IAAIC,EAAc,EAClB,MAAMC,EACJC,OAAOJ,EAAMK,cAAchB,MAAMiB,OACjCF,OAAOJ,EAAMK,cAAcE,KAAKD,OAClC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,OAAOJ,EAAMK,cAAcI,OAAOH,OAAQE,IAC5DrB,EAAce,EAAaC,GACxBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAW,CAC5DD,SAAQ,gBACVyB,aAAa,EACbC,cAAc,GACd,IAEHC,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBR,EAAA8B,OAAOK,QAAQ,sBAAoB5B,QAAiBC,MAAW,CAC3DD,SAAQ,gBACVyB,aAAa,EACbC,cAAc,GACd,IAENZ,GAAeF,EAAMK,cAAcE,KAAKD,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  submitBtn: document.querySelector('form'),\n};\nconsole.log(refs.submitBtn);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.submitBtn.addEventListener('submit', event => {\n  event.preventDefault();\n  let numPosition = 0;\n  const delayTotal =\n    Number(event.currentTarget.delay.value) +\n    Number(event.currentTarget.step.value);\n  for (let i = 0; i < Number(event.currentTarget.amount.value); i++) {\n    createPromise(numPosition, delayTotal)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      });\n    numPosition += event.currentTarget.step.value;\n  }\n});\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\n// let delay = 1000;\n// const step = 500;\n// const amount = 5;\n\n// for (let i = 0; i < amount; i++) {\n//   createPromise(i + 1, delay)\n//     .then(({ position, delay }) => {\n//       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n//   delay += event.currentTarget.step.value;\n// }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","submitBtn","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","event","preventDefault","numPosition","delayTotal","Number","currentTarget","value","step","i","amount","then","Notify","success","backOverlay","clickToClose","catch","failure"],"version":3,"file":"03-promises.b54b3e9a.js.map"}