{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,SAAUF,SAASC,cAAc,sBACjCE,WAAYH,SAASC,cAAc,wBACnCG,UAAWJ,SAASC,cAAc,SAOpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,IAG/BT,EAAKC,SAAS,G,CAflBgB,QAAQC,IAAIlB,EAAKC,WACjBgB,QAAQC,IAAIlB,EAAKI,UACjBa,QAAQC,IAAIlB,EAAKK,YACjBY,QAAQC,IAAIlB,EAAKM,WAejBN,EAAKM,UAAUa,iBAAiB,UAAU,KACxC,IAAIC,EAAc,EAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAKK,WAAWiB,MAAOD,GAAK,EAAG,CACjDD,GAAe,EACfH,QAAQC,IAAIE,GAGZb,EAAca,EAFKpB,EAAKC,UAAUqB,MAAQtB,EAAKI,SAASkB,OAGrDC,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBX,EAAA0B,OAAOC,QAAQ,gDAAmD,CAC9DjB,SAAQ,gBACVkB,aAAa,EACbC,cAAc,GACd,IAEHC,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA0B,OAAOK,QAAQ,+CAAgD,CAC7DrB,SAAU,gBACVkB,aAAa,EACbC,cAAc,GACd,G,CAGRG,MAAMC,gBAAgB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delayName: document.querySelector(\"input[name='delay']\"),\n  stepName: document.querySelector(\"input[name='step']\"),\n  amountName: document.querySelector(\"input[name='amount']\"),\n  submitBtn: document.querySelector('form'),\n};\nconsole.log(refs.delayName);\nconsole.log(refs.stepName);\nconsole.log(refs.amountName);\nconsole.log(refs.submitBtn);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n    refs.delayName;\n  });\n}\nrefs.submitBtn.addEventListener('submit', () => {\n  let numPosition = 0;\n  for (let i = 0; i < refs.amountName.value; i += 1) {\n    numPosition += 1;\n    console.log(numPosition);\n    const dalayTotal = refs.delayName.value + refs.stepName.value;\n\n    createPromise(numPosition, dalayTotal)\n      .then(({ position, delay }) => {\n        Notify.success('✅ Fulfilled promise ${position} in ${delay}ms', {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure('❌ Rejected promise ${position} in ${delay}ms', {\n          position: 'center-center',\n          backOverlay: true,\n          clickToClose: true,\n        });\n      });\n  }\n  event.preventDefault();\n});\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delayName","document","querySelector","stepName","amountName","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","numPosition","i","value","then","Notify","success","backOverlay","clickToClose","catch","failure","event","preventDefault"],"version":3,"file":"03-promises.7b555904.js.map"}